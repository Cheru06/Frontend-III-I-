:root {
  --bg-color: rgba(0, 0, 0, 0.7);
  --text-color: #fff;
  --card-bg: rgba(255, 255, 255, 0.1);
  --highlight-color: #00ffcc;
}

body.light {
  --bg-color: rgba(255, 255, 255, 0.85);
  --text-color: #000;
  --card-bg: rgba(0, 0, 0, 0.05);
  --highlight-color: #0077ff;
  background: url('https://images.unsplash.com/photo-1501785888041-af3ef285b470?auto=format&fit=crop&w=1600&q=80') no-repeat center center fixed;
  background-size: cover;
}

body {
  font-family: 'Segoe UI', sans-serif;
  margin: 0;
  padding: 0;
  background: url('https://images.unsplash.com/photo-1501785888041-af3ef285b470?auto=format&fit=crop&w=1600&q=80') no-repeat center center fixed;
  background-size: cover;
  color: var(--text-color);
  transition: background 0.5s, color 0.5s;
}

.overlay {
  background: var(--bg-color);
  min-height: 100vh;
  padding: 40px;
  transition: background 0.5s;
}

.container {
  max-width: 1000px;
  margin: auto;
}

nav {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-bottom: 40px;
}

nav a {
  color: var(--highlight-color);
  text-decoration: none;
  font-weight: bold;
  font-size: 1.1rem;
  transition: color 0.3s;
}

nav a:hover {
  color: var(--text-color);
}

.header {
  text-align: center;
  margin-bottom: 40px;
}

.header h1 {
  font-size: 3rem;
  margin-bottom: 10px;
}

.header p {
  font-size: 1.2rem;
  color: #ddd;
}

.card {
  background: var(--card-bg);
  border-radius: 15px;
  padding: 25px;
  margin-bottom: 30px;
  backdrop-filter: blur(6px);
  box-shadow: 0 8px 20px rgba(0,0,0,0.4);
  transition: background 0.5s;
}

.card h2 {
  border-bottom: 2px solid var(--highlight-color);
  padding-bottom: 8px;
  margin-bottom: 15px;
  font-size: 1.8rem;
}

.card p, .card ul li {
  font-size: 1.1rem;
  line-height: 1.6;
  margin-bottom: 12px;
}

.highlight {
  color: var(--highlight-color);
  font-weight: bold;
}

.footer {
  text-align: center;
  margin-top: 40px;
  font-size: 0.9rem;
  color: #bbb;
}

<!-- ===== Sun ↔ Moon Slider Toggle (paste into your page) ===== -->
<!-- HTML -->
<div class="toggle-container">
  <label class="theme-toggle" aria-label="Toggle theme (dark / light)">
    <input type="checkbox" id="themeToggle" checked>
    <span class="track" aria-hidden="true"></span>
  </label>
</div>

<!-- CSS (append to your stylesheet) -->
<style>
/* Toggle container (fixed top-right) */
.toggle-container {
  position: fixed;
  top: 20px;
  right: 30px;
  z-index: 1000;
  display: inline-block;
}

/* wrapper */
.theme-toggle {
  display: inline-block;
  width: 70px;
  height: 34px;
  position: relative;
}

/* hide real checkbox */
.theme-toggle input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  pointer-events: none;
}

/* track (background) */
.theme-toggle .track {
  display: block;
  width: 100%;
  height: 100%;
  background: #2c3e50; /* night by default (dark-mode on) */
  border-radius: 34px;
  transition: background 350ms ease;
  box-shadow: inset 0 2px 6px rgba(0,0,0,0.35);
}

/* knob (sun / moon) */
.theme-toggle .track::before {
  content: "🌙"; /* moon by default (dark-mode) */
  position: absolute;
  left: 6px;           /* base left; we'll translate it to right for checked state */
  top: 3px;
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background: #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  transform: translateX(36px); /* default: placed to the right (moon visible) */
  transition: transform 350ms cubic-bezier(.2,.9,.3,1), content 220ms, background 350ms;
  box-shadow: 0 2px 6px rgba(0,0,0,0.35);
}

/* When checkbox is unchecked -> light mode */
/* The selector below triggers when input is NOT checked (user toggled to light). */
/* But CSS can't select 'not checked' directly combined with sibling easily; we handle both states: */
.theme-toggle input:not(:checked) + .track {
  background: #f1c40f; /* sun yellow */
}
.theme-toggle input:not(:checked) + .track::before {
  content: "☀️";
  transform: translateX(0); /* knob slides to left */
  background: #ffffff;
}

/* When checkbox is checked -> dark mode (default) */
.theme-toggle input:checked + .track {
  background: #2c3e50; /* night blue */
}
.theme-toggle input:checked + .track::before {
  content: "🌙";
  transform: translateX(36px); /* knob slides to right */
  background: #ffffff;
}

/* Slight focus/interaction styling */
.theme-toggle input:focus + .track {
  box-shadow: 0 0 0 4px rgba(0,0,0,0.15);
}
</style>

<!-- JS (put inside <script> or your main JS file) -->
<script>
  (function() {
    const toggle = document.getElementById('themeToggle');
    // Ensure body starts in dark mode (since checkbox is checked by default)
    function applyTheme(checked) {
      if (checked) {
        document.body.classList.add('dark-mode');
      } else {
        document.body.classList.remove('dark-mode');
      }
    }

    // On load, set theme according to checkbox (checked -> dark)
    document.addEventListener('DOMContentLoaded', () => {
      // if you previously had dark-mode persisted, you can override:
      applyTheme(toggle.checked);
    });

    // Toggle on change
    toggle.addEventListener('change', (e) => {
      applyTheme(e.target.checked);
    });
  })();
</script>
/* Contact Form */
.contact-form {
  display: flex;
  flex-direction: column;
  gap: 18px;
  max-width: 500px;
  margin: 0 auto; /* centers the form */
}

.contact-form label {
  font-weight: 600;
  margin-bottom: 5px;
}

.contact-form input,
.contact-form textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid #666;
  border-radius: 6px;
  background-color: #222;
  color: white;
  font-size: 1rem;
  transition: background 0.3s, border 0.3s;
}

.contact-form input:hover,
.contact-form textarea:hover {
  background-color: #333; /* Dark hover */
  border-color: #888;
}

.contact-form button {
  align-self: center;
  padding: 12px 24px;
  border: none;
  border-radius: 6px;
  background-color: #ff4757;
  color: white;
  font-size: 1rem;
  cursor: pointer;
  transition: background 0.3s;
}

.contact-form button:hover {
  background-color: #e84118;
}